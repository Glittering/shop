"""
Django settings for ttsx_part1 project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'pozt6(65@rbf+*zw*6e^&*!5=!f$p+5%g2n7d_ae$3wmyrxq1n'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*', ]


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 安装自定义应用
    'carts',
    'users',
    'goods',
    'order',
    # 按装富文本编辑器
    'tinymce',
    # 安装全文搜索引擎
    'haystack',
    # 安装celery
    'djcelery',
    # 安装gunicorn
    # 'gunicorn',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    # 'django.middleware.cache.CacheMiddleware',  # 启用缓存
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'users.middleware.RecordUrlMiddleware',  # 安装中间件记录跳转页面之前的url
    'django.middleware.gzip.GZipMiddleware',  # 启用GZIP
)

ROOT_URLCONF = 'ttsx_all.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ttsx_all.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ttsx_all',
        'HOST': 'localhost',
        'PORT': '3306',
        'USER': 'guest',
        'PASSWORD': 'guest',
    },
#     'db1': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'ttsx_all_users',
#         'HOST': 'localhost',
#         'PORT': '3306',
#         'USER': 'guest',
#         'PASSWORD': 'guest',
#     },
#     'db2': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'ttsx_all_goods',
#         'HOST': 'localhost',
#         'PORT': '3306',
#         'USER': 'guest',
#         'PASSWORD': 'guest',
#     },
#     'db3': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'ttsx_all_carts',
#         'HOST': 'localhost',
#         'PORT': '3306',
#         'USER': 'guest',
#         'PASSWORD': 'guest',
#     },
#     'db4': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'ttsx_all_order',
#         'HOST': 'localhost',
#         'PORT': '3306',
#         'USER': 'guest',
#         'PASSWORD': 'guest',
#     },

}
#
# DATABASE_ROUTERS = ['ttsx_all.database_router.DatabaseAppsRouter']
# DATABASE_APPS_MAPPING = {
#     'users': 'db1',
#     'goods': 'db2',
#     'carts': 'db3',
#     'order': 'db4',
# }

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
# 设置静态文件路径
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
# ]

# 设置图片路径
MEDIA_ROOT = os.path.join(BASE_DIR, 'static/images/goods')

# 配置tinymce
TINYMCE_DEFAULT_CONFIG = {
    'theme': 'advanced',
    # 'theme': 'simple',
    'width': 600,
    'height': 400,
    'language': 'zh-CN',
    'theme_advanced_buttons1': 'bold, italic, underline, strikethrough, justifyleft, justifycenter, justifyright, '
                               'justifyfull, styleselect, bullist, numlist, outdent, indent, undo,redo, link, unlink, '
                               'image, cleanup, help, code, table, row_before, row_after, delete_row, separator, '
                               'rowseparator',
    'theme_advanced_buttons2': 'col_before, col_after, delete_col, hr, removeformat, sub, sup, formatselect, '
                               'fontselect, fontsizeselect, forecolor,charmap,visualaid,spacer,cut,copy,paste'
}

# 全文搜索引擎配置
HAYSTACK_CONNECTIONS = {
    'default': {
        # 使用whoosh引擎
        'ENGINE': 'haystack.backends.whoosh_cn_backend.WhooshEngine',
        # 索引文件路径
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    }
}
# 当添加、修改、删除数据时，自动生成索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

# 发送邮件
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.163.com'  # 发送邮件的邮箱的SMTP服务器
EMAIL_USE_TLS = False   # 是否使用TLS安全传输协议
EMAIL_USE_SSL = True    # 是否使用SSL加密
EMAIL_PORT = 465
# 发送邮件的邮箱
EMAIL_HOST_USER = 'lz15251847740@163.com'
# 在邮箱中设置的客户端授权密码
EMAIL_HOST_PASSWORD = 'qazwsx741852'
# 收件人看到的发件人
EMAIL_FROM = 'lz15251847740@163.com'
# 自定义收件人列表
EMAIL_TO_LIST = ['516960831@qq.com', ]

# 配置celery
import djcelery
djcelery.setup_loader()
BROKER_URL = 'redis://127.0.0.1:6379/2'
CELERY_IMPORTS = ('users.tasks')

# 配置redis缓存session
SESSION_ENGINE = 'redis_sessions.session'
SESSION_REDIS_HOST = 'localhost'
SESSION_REDIS_PORT = 6379
SESSION_REDIS_DB = 0
# # 没有密码
# SESSION_REDIS_PASSWORD = 'password'
SESSION_REDIS_PREFIX = 'session'

# # redis配置cache
# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": "redis://127.0.0.1:6379",
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#             "CONNECTION_POOL_KWARGS": {"max_connections": 100},
#         }
#     }
# }
#
# CACHE_MIDDLEWARE_SECONDS = 60*15
# # CACHE_MIDDLEWARE_KEY_PREFIX=''
# CACHE_MIDDLEWARE_ANONYMOUS_ONLY = True
